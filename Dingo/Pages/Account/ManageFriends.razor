@inject ILogger<ManageFriends> logger

<div class="d-flex justify-content-center">
    <div class="input-group" style="width: auto;">
        <button class=@(selectedButton == 0 ? SelectedClass : DefaultClass) @onclick=SelectButton0 type="button">
            <span class="d-none d-md-block">
                Friends
            </span>
            <span class="d-md-none">
                <span class="oi oi-people" title="Friends" aria-hidden="true"></span>
            </span>
        </button>
        <button class=@(selectedButton == 1 ? SelectedClass : DefaultClass) @onclick=SelectButton1 type="button">
            <span class="d-none d-md-block">
                Add Friend
            </span>
            <span class="d-md-none">
                <span class="oi oi-plus" title="Add Friend" aria-hidden="true"></span>
            </span>
        </button>
        <button class=@(selectedButton == 2 ? SelectedClass : DefaultClass) @onclick=SelectButton2 type="button">
            <span class="d-none d-md-block">
                Requests
            </span>
            <span class="d-md-none">
                <span class="oi oi-bell" title="View Friend Requests" aria-hidden="true"></span>
            </span>
        </button>
        <button class=@(selectedButton == 3 ? SelectedClass : DefaultClass) @onclick=SelectButton3 type="button">
            <span class="d-none d-md-block">
                Blocked
            </span>
            <span class="d-md-none">
                <span class="oi oi-ban" title="View Blocked" aria-hidden="true"></span>
            </span>
        </button>
    </div>
</div>
<div class="d-flex my-2" style="text-align: center;">
    <div class="flex-grow-1 align-self-center brand-text">
        <span>@GetTabTitle()</span>
    </div>
</div>
<div class="d-flex flex-column">
    @switch (selectedButton)
    {
        case 0:
            <Dingo.Pages.Account.Friends.DisplayFriends Id=@Id />
            break;
        case 1:
            <AddFriend />
            break;
        case 2:
            <Dingo.Pages.Account.Requests.ViewRequests Id=@Id />
            break;
        case 3:
            <Dingo.Pages.Account.Blocks.ViewBlocked Id=@Id />
            break;
    }
</div>

@code {
    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public string DisplayName { get; set; }

    private const string SelectedClass = "btn btn-primary text-nowrap";
    private const string DefaultClass = "btn btn-outline-primary text-nowrap";

    private List<(string Text, bool selected, Action OnClick)> Buttons = new();

    private int selectedButton = 0;

    private string GetTabTitle() => selectedButton switch
    {
        0 => "Friends",
        1 => "Add a Friend",
        2 => "Pending Friend Requests",
        3 => "Blocked Friends",
        _ => ""
    };

    private void SelectButton0() => SelectButton(0);
    private void SelectButton1() => SelectButton(1);
    private void SelectButton2() => SelectButton(2);
    private void SelectButton3() => SelectButton(3);

    private void SelectButton(int index)
    {
        selectedButton = index;
        for (int i = 0; i < Buttons.Count; i++)
        {
            if (i != index)
            {
                var stored = Buttons[i];
                stored.selected = false;
                Buttons[i] = stored;
            }
            else
            {
                var stored = Buttons[i];
                stored.selected = true;
                Buttons[i] = stored;
            }
        }
    }

    private void SetupButtons()
    {
        Buttons.Add(("Friends", true, () => SelectButton(0)));
        Buttons.Add(("Add Friend", false, () => SelectButton(1)));
        Buttons.Add(("Requests", false, () => SelectButton(2)));
        Buttons.Add(("Blocked", false, () => SelectButton(3)));
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        logger.LogInformation("Initialized Component {ComponentName} Params: {Param1}:{Param1Value} {Param2}:{Param2Value}", nameof(ManageFriends), nameof(Id), Id, nameof(DisplayName), DisplayName);
        SetupButtons();
    }
}
